import{r as i,b as u,h as c,c as F,a as b,d as n,g as h,i as g,v as f,e as A,f as E,o as v}from"./app-CRWUjIol.js";import{_ as q}from"./plugin-vue_export-helper-DlAUqK2U.js";const D={__name:"introduction.html",setup(m,{expose:s}){s();let r=i(0);const a=i(""),l=[u("hmpl0"),c("div","Loading...")],e=(o,y)=>l[0],p=(o,y)=>l[1],t=i(e),d={get id(){return r},set id(o){r=o},login:a,els:l,Comment:e,Loading:p,currentComponent:t,switchComponent:()=>{t.value===e&&(t.value=p,setTimeout(()=>{t.value=c("span",`Hello, ${a.value}!`),a.value=""},300))},createCommentVNode:u,h:c,ref:i};return Object.defineProperty(d,"__isScriptSetup",{enumerable:!1,value:!0}),d}},C={id:"wrapper"},x={class:"form-example"};function k(m,s,r,a,l,e){return v(),F("div",null,[s[3]||(s[3]=b(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h1><p>üåê hmpl is a small template language for displaying UI from server to client. It is based on <em>customizable</em> requests sent to the server via <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API" target="_blank" rel="noopener noreferrer">fetch</a> and processed into ready-made HTML. The language is syntactically object-based and integrated with <a href="https://www.npmjs.com/package/json5" target="_blank" rel="noopener noreferrer">JSON5</a>. Reduce the size of your javascript files and display the same UI as if it was written in a modern framework.</p><h2 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example 1</span></a></h2><h3 id="html-before" tabindex="-1"><a class="header-anchor" href="#html-before"><span>HTML before</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#6F42C1;"> id</span><span style="color:#D32F2F;">=</span><span style="color:#22863A;">&quot;wrapper&quot;</span><span style="color:#24292EFF;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#6F42C1;"> src</span><span style="color:#D32F2F;">=</span><span style="color:#22863A;">&quot;https://unpkg.com/json5/dist/index.js&quot;</span><span style="color:#24292EFF;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#6F42C1;"> src</span><span style="color:#D32F2F;">=</span><span style="color:#22863A;">&quot;https://unpkg.com/hmpl-js/dist/hmpl.min.js&quot;</span><span style="color:#24292EFF;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#D32F2F;">  const</span><span style="color:#1976D2;"> templateFn</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> hmpl</span><span style="color:#6F42C1;">.compile</span><span style="color:#24292EFF;">(</span></span>
<span class="line"><span style="color:#22863A;">    \`&lt;div&gt;</span></span>
<span class="line"><span style="color:#22863A;">       { </span></span>
<span class="line"><span style="color:#22863A;">         {</span></span>
<span class="line"><span style="color:#22863A;">           &quot;src&quot;:&quot;http://localhost:8000/api/test&quot; </span></span>
<span class="line"><span style="color:#22863A;">         } </span></span>
<span class="line"><span style="color:#22863A;">       }</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#24292EFF;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">  const</span><span style="color:#1976D2;"> wrapper</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> document</span><span style="color:#6F42C1;">.getElementById</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;wrapper&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">  const</span><span style="color:#1976D2;"> obj</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> templateFn</span><span style="color:#24292EFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C2C3C5;">  /**</span></span>
<span class="line"><span style="color:#C2C3C5;">   * obj = {</span></span>
<span class="line"><span style="color:#C2C3C5;">   *  response: div,</span></span>
<span class="line"><span style="color:#C2C3C5;">   *  status: 200</span></span>
<span class="line"><span style="color:#C2C3C5;">   * }</span></span>
<span class="line"><span style="color:#C2C3C5;">   */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976D2;">  wrapper</span><span style="color:#6F42C1;">.appendChild</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">obj</span><span style="color:#24292EFF;">.response);</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292EFF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api-route-api-test" tabindex="-1"><a class="header-anchor" href="#api-route-api-test"><span>API route - /api/test</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">span</span><span style="color:#24292EFF;">&gt;123&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292EFF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="html-after" tabindex="-1"><a class="header-anchor" href="#html-after"><span>HTML after</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#6F42C1;"> id</span><span style="color:#D32F2F;">=</span><span style="color:#22863A;">&quot;wrapper&quot;</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;&lt;</span><span style="color:#22863A;">span</span><span style="color:#24292EFF;">&gt;123&lt;/</span><span style="color:#22863A;">span</span><span style="color:#24292EFF;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example 2</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">import</span><span style="color:#24292EFF;"> { compile } </span><span style="color:#D32F2F;">from</span><span style="color:#22863A;"> &quot;hmpl-js&quot;</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> templateFn</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> compile</span><span style="color:#24292EFF;">(</span></span>
<span class="line"><span style="color:#22863A;">  \`&lt;div&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;form onsubmit=&quot;function prevent(e){e.preventDefault();};return prevent(event);&quot; id=&quot;form&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;div class=&quot;form-example&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;label for=&quot;login&quot;&gt;Login: &lt;/label&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;input type=&quot;login&quot; name=&quot;login&quot; id=&quot;login&quot; required /&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;div class=&quot;form-example&quot;&gt;</span></span>
<span class="line"><span style="color:#22863A;">      &lt;input type=&quot;submit&quot; value=&quot;Register!&quot; /&gt;</span></span>
<span class="line"><span style="color:#22863A;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;/form&gt;</span></span>
<span class="line"><span style="color:#22863A;">  &lt;p&gt;</span></span>
<span class="line"><span style="color:#22863A;">    {</span></span>
<span class="line"><span style="color:#22863A;">      {</span></span>
<span class="line"><span style="color:#22863A;">        src: &quot;/api/register&quot;,</span></span>
<span class="line"><span style="color:#22863A;">        after: &quot;submit:#form&quot;,</span></span>
<span class="line"><span style="color:#22863A;">        repeat: false,</span></span>
<span class="line"><span style="color:#22863A;">        indicators: [</span></span>
<span class="line"><span style="color:#22863A;">          {</span></span>
<span class="line"><span style="color:#22863A;">            trigger: &quot;pending&quot;,</span></span>
<span class="line"><span style="color:#22863A;">            content: &quot;&lt;p&gt;Loading...&lt;/p&gt;&quot;</span></span>
<span class="line"><span style="color:#22863A;">          }</span></span>
<span class="line"><span style="color:#22863A;">        ]</span></span>
<span class="line"><span style="color:#22863A;">      }</span></span>
<span class="line"><span style="color:#22863A;">    }</span></span>
<span class="line"><span style="color:#22863A;">  &lt;/p&gt;</span></span>
<span class="line"><span style="color:#22863A;">&lt;/div&gt;\`</span></span>
<span class="line"><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#6F42C1;"> initFn</span><span style="color:#D32F2F;"> =</span><span style="color:#24292EFF;"> (ctx) </span><span style="color:#D32F2F;">=&gt;</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#D32F2F;">  const</span><span style="color:#1976D2;"> event</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> ctx</span><span style="color:#24292EFF;">.</span><span style="color:#1976D2;">request</span><span style="color:#24292EFF;">.event;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">  return</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#24292EFF;">    body</span><span style="color:#D32F2F;">:</span><span style="color:#D32F2F;"> new</span><span style="color:#6F42C1;"> FormData</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">event</span><span style="color:#24292EFF;">.target</span><span style="color:#212121;">,</span><span style="color:#1976D2;"> event</span><span style="color:#24292EFF;">.submitter)</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">    credentials</span><span style="color:#D32F2F;">:</span><span style="color:#22863A;"> &quot;same-origin&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  };</span></span>
<span class="line"><span style="color:#24292EFF;">};</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> obj</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> templateFn</span><span style="color:#24292EFF;">(initFn);</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> wrapper</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> document</span><span style="color:#6F42C1;">.getElementById</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;wrapper&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#1976D2;">wrapper</span><span style="color:#6F42C1;">.appendChild</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">obj</span><span style="color:#24292EFF;">.response);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h3>`,12)),n("div",C,[n("div",null,[n("div",null,[n("form",{onSubmit:h(a.switchComponent,["prevent"]),id:"form"},[n("div",x,[s[1]||(s[1]=n("label",{for:"login"},"User name: ",-1)),g(n("input",{"onUpdate:modelValue":s[0]||(s[0]=p=>a.login=p),type:"text",name:"login",id:"login",required:""},null,512),[[f,a.login]])]),s[2]||(s[2]=n("div",{class:"form-example"},[n("input",{type:"submit",value:"Register!"})],-1))],32),n("p",null,[(v(),A(E(a.currentComponent)))])])])])])}const I=q(D,[["render",k],["__file","introduction.html.vue"]]),L=JSON.parse('{"path":"/introduction.html","title":"Introduction","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Example 1","slug":"example-1","link":"#example-1","children":[{"level":3,"title":"HTML before","slug":"html-before","link":"#html-before","children":[]},{"level":3,"title":"API route - /api/test","slug":"api-route-api-test","link":"#api-route-api-test","children":[]},{"level":3,"title":"HTML after","slug":"html-after","link":"#html-after","children":[]}]},{"level":2,"title":"Example 2","slug":"example-2","link":"#example-2","children":[{"level":3,"title":"Result","slug":"result","link":"#result","children":[]}]}],"git":{},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"introduction.md"}');export{I as comp,L as data};

import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as p,d as a,k as n,l as t,m as r,n as c,o as i}from"./app-CRWUjIol.js";const y={};function F(d,s){const e=c("RouteLink");return i(),o("div",null,[s[5]||(s[5]=p(`<h1 id="server-configuration" tabindex="-1"><a class="header-anchor" href="#server-configuration"><span>Server Configuration</span></a></h1><p>Since version 2.2.2, a very important feature has been added in working with the server, which will make working with the web application much safer. Now, for each route that outputs HTML, you need to specify the <code>Content-Type</code>, which has the value <code>text/html</code>.</p><p>Let&#39;s say if we set up the server using Express.js, then you can specify it as follows in the response:</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> express</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> require</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;express&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> expressRouter</span><span style="color:#D32F2F;"> =</span><span style="color:#1976D2;"> express</span><span style="color:#6F42C1;">.Router</span><span style="color:#24292EFF;">();</span></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> path</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> require</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;path&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#6F42C1;"> customController</span><span style="color:#D32F2F;"> =</span><span style="color:#24292EFF;"> (req</span><span style="color:#212121;">,</span><span style="color:#24292EFF;"> res) </span><span style="color:#D32F2F;">=&gt;</span><span style="color:#24292EFF;"> {</span></span>
<span class="line"><span style="color:#1976D2;">  res</span><span style="color:#6F42C1;">.type</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;text/html&quot;</span><span style="color:#24292EFF;">);</span></span>
<span class="line"><span style="color:#C2C3C5;">  // or res.set(&quot;Content-Type&quot;, &quot;text/html&quot;);</span></span>
<span class="line"><span style="color:#1976D2;">  res</span><span style="color:#6F42C1;">.sendFile</span><span style="color:#24292EFF;">(</span><span style="color:#1976D2;">path</span><span style="color:#6F42C1;">.join</span><span style="color:#24292EFF;">(__dirname</span><span style="color:#212121;">,</span><span style="color:#22863A;"> &quot;../ccustom.html&quot;</span><span style="color:#24292EFF;">));</span></span>
<span class="line"><span style="color:#24292EFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976D2;">expressRouter</span><span style="color:#6F42C1;">.use</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">&quot;/getCustomHTML&quot;</span><span style="color:#212121;">,</span><span style="color:#24292EFF;"> customController);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1976D2;">module</span><span style="color:#24292EFF;">.</span><span style="color:#1976D2;">exports</span><span style="color:#D32F2F;"> =</span><span style="color:#24292EFF;"> expressRouter;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The same setup applies if you, for example, make an API in php and use Laravel:</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">namespace</span><span style="color:#6F42C1;"> App</span><span style="color:#212121;">\\</span><span style="color:#6F42C1;">Http</span><span style="color:#212121;">\\</span><span style="color:#6F42C1;">Controllers</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">use</span><span style="color:#1976D2;"> Illuminate</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">Support</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">Facades</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">File</span><span style="color:#24292EFF;">;</span></span>
<span class="line"><span style="color:#D32F2F;">use</span><span style="color:#1976D2;"> Illuminate</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">Support</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">Facades</span><span style="color:#212121;">\\</span><span style="color:#1976D2;">Response</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">class</span><span style="color:#6F42C1;"> CustomController</span><span style="color:#D32F2F;"> extends</span><span style="color:#6F42C1;"> Controller</span></span>
<span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#D32F2F;">    public</span><span style="color:#D32F2F;"> function</span><span style="color:#6F42C1;"> showCustomHTML</span><span style="color:#24292EFF;">()</span></span>
<span class="line"><span style="color:#24292EFF;">    {</span></span>
<span class="line"><span style="color:#24292EFF;">        $filePath </span><span style="color:#D32F2F;">=</span><span style="color:#6F42C1;"> resource_path</span><span style="color:#212121;">(</span><span style="color:#22863A;">&#39;views/custom.html&#39;</span><span style="color:#212121;">)</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">        if</span><span style="color:#24292EFF;"> (</span><span style="color:#D32F2F;">!</span><span style="color:#1976D2;">File</span><span style="color:#D32F2F;">::</span><span style="color:#6F42C1;">exists</span><span style="color:#212121;">(</span><span style="color:#24292EFF;">$filePath</span><span style="color:#212121;">)</span><span style="color:#24292EFF;">) {</span></span>
<span class="line"><span style="color:#D32F2F;">            return</span><span style="color:#6F42C1;"> response</span><span style="color:#212121;">(</span><span style="color:#22863A;">&#39;File not found&#39;</span><span style="color:#212121;">,</span><span style="color:#1976D2;"> 404</span><span style="color:#212121;">)</span><span style="color:#24292EFF;">;</span></span>
<span class="line"><span style="color:#24292EFF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292EFF;">        $content </span><span style="color:#D32F2F;">=</span><span style="color:#1976D2;"> File</span><span style="color:#D32F2F;">::</span><span style="color:#6F42C1;">get</span><span style="color:#212121;">(</span><span style="color:#24292EFF;">$filePath</span><span style="color:#212121;">)</span><span style="color:#24292EFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">        return</span><span style="color:#1976D2;"> Response</span><span style="color:#D32F2F;">::</span><span style="color:#6F42C1;">make</span><span style="color:#212121;">(</span><span style="color:#24292EFF;">$content</span><span style="color:#212121;">,</span><span style="color:#1976D2;"> 200</span><span style="color:#212121;">)</span></span>
<span class="line"><span style="color:#D32F2F;">            -&gt;</span><span style="color:#6F42C1;">header</span><span style="color:#212121;">(</span><span style="color:#22863A;">&#39;Content-Type&#39;</span><span style="color:#212121;">,</span><span style="color:#22863A;"> &#39;text/html&#39;</span><span style="color:#212121;">)</span><span style="color:#24292EFF;">;</span></span>
<span class="line"><span style="color:#24292EFF;">    }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you try to send a file of a different format via the API, say, an image or a JSON object, you will receive the following message:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#6F42C1;">BadResponseError:</span><span style="color:#2B5581;"> Expected</span><span style="color:#22863A;"> &quot;text/html&quot;</span><span style="color:#2B5581;"> but</span><span style="color:#2B5581;"> received</span><span style="color:#22863A;"> &quot;application/json&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,8)),a("p",null,[s[1]||(s[1]=n("However, if there is a need to use all types that support the ")),s[2]||(s[2]=a("code",null,"text",-1)),s[3]||(s[3]=n(" method as before, then you can specify ")),t(e,{to:"/request.html#allowedcontenttypes"},{default:r(()=>s[0]||(s[0]=[n("allowedContentTypes")])),_:1}),s[4]||(s[4]=n("."))])])}const m=l(y,[["render",F],["__file","server-configuration.html.vue"]]),h=JSON.parse('{"path":"/server-configuration.html","title":"Server Configuration","lang":"en-US","frontmatter":{},"headers":[],"git":{},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"server-configuration.md"}');export{m as comp,h as data};
